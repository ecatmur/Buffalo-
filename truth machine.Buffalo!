A truth-machine is a simple program type, devised by User:Keymaker to be a program that is easy, most of the time, to implement in a language, and useful for testing or showcasing the following capabilities of a language:

input
output
decision
repetition
termination
Essentially, a truth-machine works like this:

Ask for input;
If the input is 0: 
Output 0;
Terminate program;
Whereas if the input is 1:
Repeat infinitely:
Output 1;

// [0] GADGET: return to nanvnv (acc > 0), saving address into nanv
vnanvnv! vnanv? BBbbbbb.
// [3] GADGET: return to nannvv + 7 (acc == 0 on entry, >0 on exit)
BbBbbbb! v! v! v! v! v! v! v! BbBbbbb? v! BBbbbbb.
// START PROGRAM
vnnv! vnanvnv? v! v! v! vnannvv? // set nanvnv=0, nannvv=3
vn! // read a bit from I/O into acc
nannvvv.|nanvnvv. // jump to nannvv(0->3)/nanvnv(1->0)
// 3 jumps back here, address in nanv
vnnv! v! vn? // output 1
vnanv! van? vnnv! anv. // jump back to nanv
// + 7 insns
vnnv! vn? // output 0